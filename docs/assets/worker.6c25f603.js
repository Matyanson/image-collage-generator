(function(){"use strict";function r(t){return new Promise(a=>{const e=new FileReader;e.readAsDataURL(t),e.onload=async()=>{typeof e.result=="string"&&a(e.result)}})}self.addEventListener("message",async t=>{const a=t.data;switch(a.type){case"process":const e=await l(a.data);self.postMessage({type:"process",data:e});break;case"process_batch":const n=a.data;for await(let s of n){const o=await l(s);self.postMessage({type:"process",data:o})}break;default:console.log("undefined command");break}});async function l(t){let a={name:t.name,thumbnail:null};const e=300*300,n=15e4,s=5e6,o=await r(t);if(console.log(t.size),t.size>s){console.log("1");const c=await u(t);let i=await m(c);if(i.size>s){console.log("1.1");const h=1/2**Math.ceil(Math.log2(i.size/s));let f=await w(c,h);i=await d(f,"image/jpeg")}a.thumbnail=await g(c,e),a.largeSize=i}else if(t.size>n){console.log("2");const c=await u(t);a.thumbnail=await g(c,e),a.largeSize=t}else console.log("3"),a.thumbnail=o;return a}async function m(t){const a=new OffscreenCanvas(t.width,t.height);return a.getContext("2d").drawImage(t,0,0),await a.convertToBlob({type:"image/jpeg"})}async function d(t,a="image/jpeg"){return await t.convertToBlob({type:a})}async function g(t,a){const e=t.width*t.height,n=Math.sqrt(a/e),o=await(await w(t,n)).convertToBlob();return await r(o)}async function w(t,a){const e=Math.round(t.width*a),n=Math.round(t.height*a),s=new OffscreenCanvas(e,n);return s.getContext("2d").drawImage(t,0,0,e,n),s}async function u(t){return await createImageBitmap(t)}})();
